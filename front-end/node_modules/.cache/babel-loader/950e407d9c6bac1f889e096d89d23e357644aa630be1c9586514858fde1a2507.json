{"ast":null,"code":"import servicoHome from \"../api/usuario\";\n//import servicoTree from \"../components/treeview\";\n\nvar s_login = '';\nconst s_nm = sessionStorage.getItem(\"login\");\nif (s_nm) {\n  s_login = s_nm[0].toUpperCase() + s_nm.substring(1);\n}\nexport default {\n  name: \"vwHome\",\n  data: () => ({\n    s_nome: s_login,\n    itens: [],\n    headers: [],\n    nome: \"eliel vieira\",\n    email: \"eliel@elielvieira.com\",\n    celular: \"21 9 9726 9540\",\n    mensagem: \"Testinho...\",\n    array_itens: [{\n      \"id\": 1,\n      \"link\": \"/\",\n      \"label\": \"Login\",\n      \"icon\": \"mdi-login\"\n    }, {\n      \"id\": 5,\n      \"link\": \"/contato\",\n      \"label\": \"Contato\",\n      \"icon\": \"mdi-gmail\"\n    }, {\n      \"id\": 6,\n      \"link\": \"/sobre\",\n      \"label\": \"Sobre\",\n      \"icon\": \"mdi-information-outline\"\n    }],\n    /*\n    nome: \"\",\n    email: \"\",\n    celular: \"\",\n    mensagem: \"\",\n    */\n\n    tree: [{\n      id: 1,\n      name: 'Item 1',\n      children: [{\n        id: 2,\n        name: 'Subitem 1-2'\n      }, {\n        id: 3,\n        name: 'Subitem 1-3'\n      }]\n    }],\n    rules: {\n      required: value => !!value || \"Campo obrigatório\",\n      email: value => {\n        const pattern = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/;\n        return pattern.test(value) || \"E-Mail inválido\";\n      },\n      celular: value => {\n        const pattern = /^[1-9]{2} [0-9]{1} [0-9]{4} [0-9]{4}$/;\n        return pattern.test(value) || \"Número inválido (Ex.: 00 0 0000 0000).\";\n      },\n      min1: value => value.length >= 6 || \"Valor inserido é muito curto.\",\n      max1: value => value.length <= 60 || \"Valor inserido é muito longo.\",\n      max2: value => value.length <= 120 || \"Valor inserido é muito longo.\"\n    },\n    isLoaded: false,\n    open: [1, 2],\n    search: null,\n    caseSensitive: false\n  }),\n  methods: {\n    async carregarPerfil() {\n      const resultado = await servicoHome.getPermissao(sessionStorage.getItem(\"user_id\"));\n      const array_menu = JSON.parse(JSON.stringify(localStorage.getItem('menu')));\n      //let array_res = this.array_itens;\n      if (array_menu && array_menu.length > 0) {\n        //array_res = array_menu;\n      }\n      this.itens = array_menu;\n      console.log(JSON.stringify(resultado));\n      console.log(JSON.stringify(resultado));\n    },\n    async acessar() {\n      try {\n        //chamada do servico\n        ////const resultado = await servicoHome.home(this.dados);\n        ////alert(JSON.stringify(resultado));\n        ////alert('Seja Bem Vindo '+ this.dados.username);\n      } catch (error) {\n        console.error('Erro ao carregar site:', error);\n        this.response = error.response ? error.response.data : 'Erro desconhecido';\n      }\n    },\n    submitForm() {\n      this.$refs.form.validate().then(result => {\n        if (result.valid) {\n          //Enviar formulario para atualizacao\n          alert('Atualizando dados...');\n          this.isLoaded = true;\n          console.log(\"nome: \", this.nome);\n          console.log(\"email: \", this.email);\n          console.log(\"celular: \", this.celular);\n          console.log(\"mensagem: \", this.mensagem);\n        }\n      });\n    },\n    limpar_campos() {\n      this.nome = \"\";\n      this.email = \"\";\n      this.celular = \"\";\n      this.mensagem = \"\";\n    }\n  },\n  mounted() {\n    this.carregarPerfil();\n  },\n  computed: {\n    filter() {\n      return this.caseSensitive ? (item, search, textKey) => item[textKey].indexOf(search) > -1 : undefined;\n    }\n  }\n};","map":{"version":3,"names":["servicoHome","s_login","s_nm","sessionStorage","getItem","toUpperCase","substring","name","data","s_nome","itens","headers","nome","email","celular","mensagem","array_itens","tree","id","children","rules","required","value","pattern","test","min1","length","max1","max2","isLoaded","open","search","caseSensitive","methods","carregarPerfil","resultado","getPermissao","array_menu","JSON","parse","stringify","localStorage","console","log","acessar","error","response","submitForm","$refs","form","validate","then","result","valid","alert","limpar_campos","mounted","computed","filter","item","textKey","indexOf","undefined"],"sources":["/drop/Dropbox/vuejs/5a_app/src/components/home.vue"],"sourcesContent":["<template>\n  <v-app>\n    <div class=\"d-flex justify-center ma-4\">\n      <v-card elevation=\"5\" width=\"100%\" outlined>\n        <v-card-title>Página Principal</v-card-title>\n        <v-card-subtitle>Bem vindo ao nosso site <b>{{s_nome}}</b>!</v-card-subtitle>\n        <v-card-text>\n\n           <v-form ref=\"form\">\n              <v-text-field\n                label=\"Nome\"\n                v-model=\"nome\"\n                :rules=\"[rules.required, rules.min1, rules.max1]\">\n              </v-text-field>\n              <v-text-field \n                label=\"E-Mail\" \n                type=\"email\"\n                v-model=\"email\"\n                :rules=\"[rules.required, rules.email]\">\n              </v-text-field>\n              <v-text-field \n                label=\"Celular\"\n                v-model=\"celular\"\n                :rules=\"[rules.required, rules.celular]\">\n              </v-text-field>\n              <v-text-field \n                label=\"Mensagem\"\n                v-model=\"mensagem\"\n                :rules=\"[rules.required, rules.min1, rules.max2]\">\n              </v-text-field>\n            </v-form>\n\n        </v-card-text>\n        <v-card-actions>\n          <v-btn text color=\"primary\" @click=\"submitForm\">Atualizar Dados</v-btn>\n          <v-btn text @click=\"limpar_campos\">Limpar Dados</v-btn>\n        </v-card-actions>\n        <v-card-text v-if=\"isLoaded\">\n        <v-card-title>Dados Atualizados:</v-card-title>\n          Nome: {{ nome }} <br />\n          E-Mail: {{ email }} <br />\n          Celular: {{ celular }} <br />\n          Mensagem: {{ mensagem }} <br />\n        </v-card-text>\n\n      </v-card>\n    </div>\n\n    <div v-if=\"itens && itens.length > 1\">\n     <v-list-item v-for=\"item in itens\" :to=\"item.link\" :key=\"item.id\">\n      <v-icon>mdi-folder-network</v-icon>\n      <v-treeview :items=\"item.id\">\n       {{item.label}}\n      </v-treeview>\n     </v-list-item>\n    </div>\n\n    <v-sheet class=\"pa-4 bg-primary-lighten-2\">\n      <v-text-field\n        v-model=\"search\"\n        clear-icon=\"mdi-close-circle-outline\"\n        label=\"Pesquisar...\"\n        clearable\n        dark\n        flat\n        hide-details\n        solo-inverted\n      ></v-text-field>\n      <v-checkbox\n        v-model=\"caseSensitive\"\n        label=\"Case Sensitive\"\n        dark\n        hide-details\n      ></v-checkbox>\n    </v-sheet>\n    \n    <v-card-text>\n      <v-treeview\n        v-model:open=\"open\"\n        :filter=\"filter\"\n        :items=\"itens\"\n        :search=\"search\"\n        activatable\n        open-on-click\n      >\n        <template v-slot:prepend=\"{ item }\">\n          <v-icon\n            v-if=\"item.children\"\n            :icon=\"`mdi-${item.id === 1 ? 'home-variant' : 'folder-network'}`\"\n          ></v-icon>\n        </template>\n      </v-treeview>\n    </v-card-text>\n\n  </v-app>\n</template>\n\n<script>\n\nimport servicoHome from \"../api/usuario\";\n//import servicoTree from \"../components/treeview\";\n\nvar s_login = '';\nconst s_nm = sessionStorage.getItem(\"login\");\nif (s_nm) {\n  s_login = s_nm[0].toUpperCase() + s_nm.substring(1);\n}\n\nexport default {\n  name: \"vwHome\",\n\n  data: () => ({\n    s_nome: s_login,\n    itens: [],\n    headers: [],\n    nome: \"eliel vieira\",\n    email: \"eliel@elielvieira.com\",\n    celular: \"21 9 9726 9540\",\n    mensagem: \"Testinho...\",\n    array_itens: [\n     {\"id\":1,\"link\":\"/\",\"label\":\"Login\",\"icon\":\"mdi-login\"},\n     {\"id\":5,\"link\":\"/contato\",\"label\":\"Contato\",\"icon\":\"mdi-gmail\"},\n     {\"id\":6,\"link\":\"/sobre\",\"label\":\"Sobre\",\"icon\":\"mdi-information-outline\"}\n    ],\n\n    /*\n    nome: \"\",\n    email: \"\",\n    celular: \"\",\n    mensagem: \"\",\n    */\n\n    tree: [\n     {\n      id: 1,\n      name: 'Item 1',\n      children: [\n        { id: 2, name: 'Subitem 1-2' },\n        { id: 3, name: 'Subitem 1-3' }\n      ]\n     },  \n    ],\n\n    rules: {\n      required: (value) => !!value || \"Campo obrigatório\",\n      email: (value) => {\n        const pattern = (/^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/);\n        return pattern.test(value) || \"E-Mail inválido\";\n      },\n      celular: (value) => {\n        const pattern = /^[1-9]{2} [0-9]{1} [0-9]{4} [0-9]{4}$/;\n        return pattern.test(value) || \"Número inválido (Ex.: 00 0 0000 0000).\";\n      },\n      min1: (value) => value.length >= 6 || \"Valor inserido é muito curto.\",\n      max1: (value) => value.length <= 60 || \"Valor inserido é muito longo.\",\n      max2: (value) => value.length <= 120 || \"Valor inserido é muito longo.\",\n    },  \n\n    isLoaded: false,\n\n    open: [1, 2],\n    search: null,\n    caseSensitive: false,\n\n  }),\n\n  methods: {\n    async carregarPerfil() \n    {\n      const resultado = await servicoHome.getPermissao(sessionStorage.getItem(\"user_id\"));\n      const array_menu = JSON.parse(JSON.stringify(localStorage.getItem('menu')));\n      //let array_res = this.array_itens;\n      if (array_menu && array_menu.length > 0) {\n        //array_res = array_menu;\n      }\n      this.itens = array_menu;\n      console.log(JSON.stringify(resultado));\n      console.log(JSON.stringify(resultado));\n    },\n    async acessar() { \n      try {\n        //chamada do servico\n        ////const resultado = await servicoHome.home(this.dados);\n        ////alert(JSON.stringify(resultado));\n        ////alert('Seja Bem Vindo '+ this.dados.username);\n      } catch (error) {\n        console.error('Erro ao carregar site:', error);\n        this.response = error.response ? error.response.data : 'Erro desconhecido'; \n      }            \n    },\n\n    submitForm() {\n      this.$refs.form.validate().then((result) => {\n        if (result.valid) {\n          //Enviar formulario para atualizacao\n          alert('Atualizando dados...');\n          this.isLoaded = true;\n          console.log(\"nome: \", this.nome);\n          console.log(\"email: \", this.email);\n          console.log(\"celular: \", this.celular);\n          console.log(\"mensagem: \", this.mensagem);\n        }\n      });\n    },\n\n    limpar_campos() {\n     this.nome = \"\";\n     this.email = \"\";\n     this.celular = \"\";\n     this.mensagem = \"\";\n    }, \n  },\n\n  mounted() {\n    this.carregarPerfil();\n  },  \n\n    computed: {\n      filter () {\n        return this.caseSensitive\n          ? (item, search, textKey) => item[textKey].indexOf(search) > -1\n          : undefined\n      },\n    },\n\n};\n\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}